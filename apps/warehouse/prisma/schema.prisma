generator client {
  output   = "./generated/client"
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Supplier {
  id                  String             @id @default(uuid())
  name                String
  contact             String
  created_at          DateTime           @default(now())
  updated_at          DateTime           @updatedAt
  is_deleted          Boolean            @default(false)
  MEQSSupplier        MEQSSupplier[]
  meqs_supplier_items MEQSSupplierItem[]

  @@map("supplier")
}

model Unit {
  id            String        @id @default(uuid())
  name          String
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  is_deleted    Boolean       @default(false)
  canvass_items CanvassItem[]

  @@map("unit")
}

model Brand {
  id            String        @id @default(uuid())
  name          String
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  is_deleted    Boolean       @default(false)
  canvass_items CanvassItem[]

  @@map("brand")
}

model Vehicle {
  id           String   @id @default(uuid())
  name         String
  plate_number String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  is_deleted   Boolean  @default(false)
  sprs         SPR[]

  @@map("vehicle")
}

model CanvassItem {
  id          String  @id @default(uuid())
  canvass_id  String
  canvass     Canvass @relation(fields: [canvass_id], references: [id], onDelete: Cascade)
  description String
  brand_id    String?
  brand       Brand?  @relation(fields: [brand_id], references: [id], onDelete: Restrict)
  unit_id     String
  unit        Unit    @relation(fields: [unit_id], references: [id], onDelete: Restrict)
  quantity    Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  is_deleted Boolean  @default(false)

  meqs_supplier_items MEQSSupplierItem[]

  @@map("canvass_item")
}

model Canvass {
  id              String        @id @default(uuid())
  rc_number       String        @unique
  date_requested  DateTime
  purpose         String
  notes           String?
  requested_by_id String
  is_referenced   Boolean       @default(false)
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  is_deleted      Boolean       @default(false)
  canvass_items   CanvassItem[]
  jo              JO?
  rv              RV?
  spr             SPR?

  @@map("canvass")
}

model JO {
  id                String       @id @default(uuid())
  jo_number         String       @unique
  date_requested    DateTime
  canvass_id        String       @unique
  equipment         String
  classification_id String?
  department_id     String
  supervisor_id     String
  status            Int          @default(1)
  canceller_id      String?
  is_referenced     Boolean      @default(false)
  created_at        DateTime     @default(now())
  updated_at        DateTime     @updatedAt
  is_deleted        Boolean      @default(false)
  jo_approvers      JOApprover[]
  canvass           Canvass      @relation(fields: [canvass_id], references: [id])
  meqs              MEQS?

  @@map("job_order")
}

model JOApprover {
  id                String    @id @default(uuid())
  jo_id             String
  approver_proxy_id String?
  date_approval     DateTime?
  notes             String?
  status            Int
  label             String
  order             Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  is_deleted        Boolean   @default(false)
  jo                JO        @relation(fields: [jo_id], references: [id])

  @@map("jo_approver")
}

model RV {
  id                String    @id @default(uuid())
  canvass_id        String    @unique
  canvass           Canvass   @relation(fields: [canvass_id], references: [id])
  classification_id String?
  supervisor_id     String
  canceller_id      String?
  rv_number         String    @unique
  date_requested    DateTime
  work_order_no     String?
  work_order_date   DateTime?
  status            Int       @default(1)
  is_referenced     Boolean   @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  is_deleted Boolean  @default(false)

  meqs         MEQS?
  rv_approvers RVApprover[]

  @@map("request_voucher")
}

model RVApprover {
  id                String    @id @default(uuid())
  rv_id             String
  approver_id       String
  approver_proxy_id String?
  date_approval     DateTime?
  notes             String?
  status            Int
  label             String
  order             Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  is_deleted        Boolean   @default(false)
  rv                RV        @relation(fields: [rv_id], references: [id], onDelete: Cascade)

  @@map("rv_approver")
}

model SPR {
  id                String        @id @default(uuid())
  spr_number        String        @unique
  date_requested    DateTime
  canvass_id        String        @unique
  vehicle_id        String
  classification_id String?
  supervisor_id     String
  status            Int           @default(1)
  canceller_id      String?
  is_referenced     Boolean       @default(false)
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
  is_deleted        Boolean       @default(false)
  meqs              MEQS?
  canvass           Canvass       @relation(fields: [canvass_id], references: [id])
  vehicle           Vehicle       @relation(fields: [vehicle_id], references: [id])
  spr_approvers     SPRApprover[]

  @@map("spare_parts_request")
}

model SPRApprover {
  id                String    @id @default(uuid())
  spr_id            String
  approver_id       String
  approver_proxy_id String?
  date_approval     DateTime?
  notes             String?
  status            Int
  label             String
  order             Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  is_deleted        Boolean   @default(false)
  spr               SPR       @relation(fields: [spr_id], references: [id])

  @@map("spr_approver")
}

model MEQS {
  id             String         @id @default(uuid())
  jo_id          String?        @unique
  rv_id          String?        @unique
  spr_id         String?        @unique
  meqs_number    String         @unique
  request_type   Int            @default(1)
  meqs_date      DateTime
  status         Int            @default(1)
  canceller_id   String?
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  is_deleted     Boolean        @default(false)
  jo             JO?            @relation(fields: [jo_id], references: [id], onDelete: Restrict)
  rv             RV?            @relation(fields: [rv_id], references: [id], onDelete: Restrict)
  spr            SPR?           @relation(fields: [spr_id], references: [id], onDelete: Restrict)
  meqs_approvers MEQSApprover[]
  meqs_suppliers MEQSSupplier[]

  @@map("material_equipment_quotation_summary")
}

model MEQSSupplier {
  id            String                   @id @default(uuid())
  meqs_id       String
  supplier_id   String
  payment_terms String
  is_referenced Boolean                  @default(false)
  created_at    DateTime                 @default(now())
  updated_at    DateTime                 @updatedAt
  is_deleted    Boolean                  @default(false)
  meqs          MEQS                     @relation(fields: [meqs_id], references: [id])
  supplier      Supplier                 @relation(fields: [supplier_id], references: [id])
  attachments   MEQSSupplierAttachment[]
  po            PO?

  @@map("meqs_supplier")
}

model MEQSSupplierItem {
  id               String  @id @default(uuid())
  canvass_item_id  String
  meqs_supplier_id String
  price            Float
  is_awarded       Boolean @default(false)
  notes            String?
  vat_type         Int     @default(1)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  is_deleted Boolean  @default(false)

  canvass_item  CanvassItem @relation(fields: [canvass_item_id], references: [id], onDelete: Cascade)
  meqs_supplier Supplier    @relation(fields: [meqs_supplier_id], references: [id], onDelete: Cascade)

  @@map("meqs_supplier_item")
}

model MEQSSupplierAttachment {
  id               String       @id @default(uuid())
  meqs_supplier_id String
  src              String
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt
  is_deleted       Boolean      @default(false)
  meqs_supplier    MEQSSupplier @relation(fields: [meqs_supplier_id], references: [id], onDelete: Cascade)

  @@map("meqs_supplier_attachment")
}

model MEQSApprover {
  id                String    @id @default(uuid())
  meqs_id           String
  approver_id       String
  approver_proxy_id String?
  date_approval     DateTime?
  notes             String?
  status            Int
  label             String
  order             Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  is_deleted        Boolean   @default(false)
  meqs              MEQS      @relation(fields: [meqs_id], references: [id])

  @@map("meqs_approver")
}

model PO {
  id               String       @id @default(uuid())
  meqs_supplier_id String       @unique
  po_number        String       @unique
  po_date          DateTime
  status           Int          @default(1)
  canceller_id     String?
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt
  is_deleted       Boolean      @default(false)
  po_approvers     POApprover[]
  meqs_supplier    MEQSSupplier @relation(fields: [meqs_supplier_id], references: [id])

  @@map("purchase_order")
}

model POApprover {
  id                String    @id @default(uuid())
  po_id             String
  approver_id       String
  approver_proxy_id String?
  date_approval     DateTime?
  notes             String?
  status            Int
  label             String
  order             Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  is_deleted        Boolean   @default(false)
  po                PO        @relation(fields: [po_id], references: [id])

  @@map("po_approver")
}
